#SamK_SC_Levels
declare upper;

input risk = 11.18;

input ShowTodayOnly = yes;
input ShowColorChange = no;
input gapper_threshold = 19;
input penny_gapper_threshold = 50;
input smallcap_threshold = 16;
input runner_threshold = 30;

def openToday = open(period = "Day")[0];
def prevClose = close(period = "Day")[1];
def ssrClose = close(period = "Day")[2];
def ssrLow = low(period = "Day")[1];
def isSSR = (((ssrLow-ssrClose)/ssrClose) *-1) > .099;
def highToday = high(period = "Day")[0];
def closeToday = close(period = "Day")[0];
def isRunner = ((highToday-openToday)/openToday) > (runner_threshold/100);
def isSmallCap = (openToday < smallcap_threshold) or isRunner;
def isDollarGapper = ((openToday-prevClose)/prevClose) > (gapper_threshold/100) and (openToday > 1);
def isPennyGapper = ((openToday-prevClose)/prevClose) > (penny_gapper_threshold/100);
def isGapper = isDollarGapper or isPennyGapper;

def upper_25_gap = 7.7;
def upper_median_gap = 17.4;
def upper_75_gap = 39.9;
def upper_90_gap = 70;

def upper_25_run = 36;
def upper_median_run = 49;
def upper_75_run = 75;
def upper_90_run = 128;

def lower_median_gap = 30.2;
def lower_75_gap = 39.7;

def lower_median_run = 23.4;
def lower_75_run = 32.7;

def upper_25 = if isSmallCap and !isGapper then upper_25_run else upper_25_gap;
def upper_median = if isSmallCap and !isGapper then upper_median_run else upper_median_gap;
def upper_75 = if isSmallCap and !isGapper then upper_75_run else upper_75_gap;
def upper_90 = if isSmallCap and !isGapper then upper_90_run else upper_90_gap;

def targ_median = if isSmallCap and !isGapper then lower_median_run else lower_median_gap;
def targ_75 = if isSmallCap and !isGapper then lower_75_run else lower_75_gap;

def stopDist = if isSmallCap and (highToday > upper_median) then highToday - closeToday else upper_median - closeToday;

AddLabel(yes, "Shrs: " + round(risk/stopDist,1), Color.light_Gray);
AddLabel(isSSR, "SSR", Color.light_gray);
AddLabel(isGapper, "Gapper", Color.Green);
AddLabel(isRunner, "Runner", Color.Light_green);
AddLabel(isSmallCap, "R25: " + upper_25 + " %", Color.light_gray);
AddLabel(isSmallCap, "R50: " + upper_median + " %", Color.ORANGE);
AddLabel(isSmallCap, "R75: " + upper_75 + " %", Color.DARK_ORANGE);
AddLabel(isSmallCap, "R90: " + upper_90 + " %", Color.LIGHT_RED);

AddLabel(isSmallCap, "T50: -" + (targ_median) + " %", Color.VIOLET);
AddLabel(isSmallCap, "T75: -" + (targ_75) + " %", Color.MAGENTA);

def Today = if GetDay() == GetLastDay() then 1 else 0;

plot High_25 = if ShowTodayOnly and !Today then Double.NaN else openToday * (upper_25 / 100 + 1);
plot High_Median = if ShowTodayOnly and !Today then Double.NaN else openToday * (upper_median / 100 + 1);
plot High_75th_percentile = if ShowTodayOnly and !Today then Double.NaN else openToday * (upper_75 / 100 + 1);
plot High_90th_percentile = if ShowTodayOnly and !Today then Double.NaN else openToday * (upper_90 / 100 + 1);
plot Target_Median = if ShowTodayOnly and !Today then Double.NaN else highToday * (1 - targ_median / 100);
plot Target_75th_percentile = if ShowTodayOnly and !Today then Double.NaN else highToday * (1 - targ_75 / 100);

def highAbove25 = highToday > High_25;
def isSmallCapGapperAndColorChange = isSmallCap and ShowColorChange and isGapper;

AssignPriceColor(if highAbove25 or !isSmallCapGapperAndColorChange then color.current else color.light_gray);

High_25.SetDefaultColor(Color.light_gray);
High_25.SetPaintingStrategy(PaintingStrategy.LINE);
High_25.SetStyle(Curve.FIRM);
High_25.SetLineWeight(1);

High_Median.SetDefaultColor(Color.ORANGE);
High_Median.SetPaintingStrategy(PaintingStrategy.LINE);
High_Median.SetStyle(Curve.FIRM);
High_Median.SetLineWeight(1);

High_75th_percentile.SetDefaultColor(Color.DARK_ORANGE);
High_75th_percentile.SetPaintingStrategy(PaintingStrategy.LINE);
High_75th_percentile.SetStyle(Curve.FIRM);
High_75th_percentile.SetLineWeight(1);

High_90th_percentile.SetDefaultColor(Color.LIGHT_RED);
High_90th_percentile.SetPaintingStrategy(PaintingStrategy.LINE);
High_90th_percentile.SetStyle(Curve.FIRM);
High_90th_percentile.SetLineWeight(1);

Target_Median.SetDefaultColor(Color.VIOLET);
Target_Median.SetPaintingStrategy(PaintingStrategy.LINE);
Target_Median.SetStyle(Curve.FIRM);
Target_Median.SetLineWeight(1);

Target_75th_percentile.SetDefaultColor(Color.MAGENTA);
Target_75th_percentile.SetPaintingStrategy(PaintingStrategy.LINE);
Target_75th_percentile.SetStyle(Curve.FIRM);
Target_75th_percentile.SetLineWeight(1);
